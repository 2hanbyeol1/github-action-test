name: Github-Action-Test # 변경 필요

on:
  push:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
          # Yarn 캐시 활성화
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run lint
        run: yarn lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate Environment Variables File # 내용 변경 필요
        run: |
          echo "VITE_TEST=$VITE_TEST" >> .env.local
          echo "VITE_TEST is $VITE_TEST"
        env:
          VITE_TEST: ${{ secrets.VITE_TEST }}
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build

      # ubuntu 서버에 접속하여 빌드 파일을 전송하고 배포된 파일을 교체
      - name: Execute Remote SSH & Deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_SSH_HOST }}
          username: ${{ secrets.REMOTE_SSH_USERNAME }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          source: ./out
          target: /home/${{ secrets.REMOTE_SSH_USERNAME }}/test #target 변경 필요

  notify-slack-success:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Notify Slack on Success
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: "good"
          SLACK_MESSAGE: "Build succeeded ✅"
          SLACK_TITLE: "Build Success"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  notify-slack-failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()
    steps:
      - name: Notify Slack on Failure
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: "danger"
          SLACK_MESSAGE: "Build failed ❌"
          SLACK_TITLE: "Build Failure"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
