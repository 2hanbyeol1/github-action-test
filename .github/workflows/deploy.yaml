name: FE-Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
          cache: "yarn"
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Run lint
        run: yarn lint

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate Environment Variables File
        # ! 환경변수 변경 필요
        run: |
          echo "VITE_TEST=${{ secrets.VITE_TEST }}" >> .env.local
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Upload build files to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
            --recursive \
            --region ap-northeast-2 \
            out s3://${{ secrets.AWS_S3_BUCKET_NAME }}

  # notify-slack-success:
  #   runs-on: ubuntu-latest
  #   needs: [build, lint]
  #   if: success()
  #   steps:
  #     - name: Notify Slack on Success
  #       uses: rtCamp/action-slack-notify@v2
  #       env:
  #         SLACK_COLOR: "good"
  #         SLACK_TITLE: " ✅ [ FE ] 배포 성공"
  #         SLACK_MESSAGE: "새로운 버전이 배포되었습니다"
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  # notify-slack-failure:
  #   runs-on: ubuntu-latest
  #   needs: [build, lint]
  #   if: failure()
  #   steps:
  #     - name: Notify Slack on Failure
  #       uses: rtCamp/action-slack-notify@v2
  #       env:
  #         SLACK_COLOR: "danger"
  #         SLACK_TITLE: "❌ [ FE ] 배포 실패"
  #         SLACK_MESSAGE: "배포에 실패하였습니다"
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
